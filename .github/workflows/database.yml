name: Database CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'database/**'
      - '.github/workflows/database.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'database/**'
      - '.github/workflows/database.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd database
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run tests
      run: |
        cd database
        python -m pytest tests/ --cov=src --cov-report=xml
      env:
        MONGO_URI: mongodb://localhost:27017
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./database/coverage.xml
        flags: database
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./database
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/fruit-casino-db:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/fruit-casino-db:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/fruit-casino-db:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/fruit-casino-db:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deploy to Digital Ocean
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        script: |
          # Pull latest image
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fruit-casino-db:latest
          
          # Stop and remove old container
          docker stop fruit-casino-db || true
          docker rm fruit-casino-db || true
          
          # Start new container
          docker run -d \
            --name fruit-casino-db \
            --network fruit-casino-network \
            -e MONGO_URI=${{ secrets.MONGO_URI }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/fruit-casino-db:latest
